dist: bionic
language: cpp
compiler:
 - g++
 - clang++
 - clang++-10
sudo: false
os:
 - linux
# - osx  ## disabled until MacOS 10.15 deploys on Travis
#osx_image: xcode11.4
branches:
  only:
    - develop
notifications:
  email:
    recipients:
      - nialldouglas14@gmail.com

addons:
  apt:
    sources:
    - llvm-toolchain-bionic-10
    packages:
    - g++
    - clang
    - clang-10
    - libc++-10-dev
    - libc++abi-10-dev
    - g++-arm-linux-gnueabihf
    - python3
    - cmake
    - cmake-data
    - doxygen
    - python3
    - python3-pip

env:
  global:
    - secure: "A3TeWTlJdjUaQ31NF60kMOik8mzaJkdKA55jZXjN83BJ2ZjMDmWfq1XmZ7iDIxmn7HC2BVpjhdkj9jpRtPztb08L5VSlJIiVbXlBWNwgzmYANujpR9rA+bhZJwlKDaYQHUZUd4+iGHCHb0dLt2HG0eHF5azaifd0YqCfz5GcWl8="
  matrix:
    - __="x64 cmake tests (error_code)" NAME=x64_EC CMAKE_CONFIGURE_OPTIONS=
    - __="x64 cmake tests (status_code)" NAME=x64_SC CMAKE_CONFIGURE_OPTIONS=-DLLFIO_USE_EXPERIMENTAL_SG14_STATUS_CODE=ON
    - __="ARM32 cmake tests (error_code)" NAME=ARM32_EC CMAKE_CONFIGURE_OPTIONS=
    - __="ARM32 cmake tests (status_code)" NAME=ARM32_SC CMAKE_CONFIGURE_OPTIONS=-DLLFIO_USE_EXPERIMENTAL_SG14_STATUS_CODE=ON
    - __="Documentation" NAME=Documentation
    - __="Programs"
    - __="Installability"
 
matrix:
  exclude:
#  - os: osx
#    compiler: g++
#  - os: osx
#    env: __="Documentation" NAME=Documentation
#  - os: osx
#    env: __="ARM32 cmake tests (error_code)" NAME=ARM32_EC CMAKE_CONFIGURE_OPTIONS=
#  - os: osx
#    env: __="ARM32 cmake tests (status_code)" NAME=ARM32_SC CMAKE_CONFIGURE_OPTIONS=-DLLFIO_USE_EXPERIMENTAL_SG14_STATUS_CODE=ON
  - os: linux
    compiler:
    - clang++
    - clang++-10
    env: __="ARM32 cmake tests (error_code)" NAME=ARM32_EC CMAKE_CONFIGURE_OPTIONS=
  - os: linux
    compiler:
    - clang++
    - clang++-10
    env: __="ARM32 cmake tests (status_code)" NAME=ARM32_SC CMAKE_CONFIGURE_OPTIONS=-DLLFIO_USE_EXPERIMENTAL_SG14_STATUS_CODE=ON
  - os: linux
    compiler:
    - g++
    - clang++-10
    env: __="Documentation" NAME=Documentation

cache:
  apt: true
    
before_install:
 - export NAME=$TRAVIS_OSNAME_$TRAVIS_COMPILER_$NAME
 - if [ "$TRAVIS_COMPILER" = "clang++-10" ]; then
     export CMAKE_CONFIGURE_OPTIONS="$CMAKE_CONFIGURE_OPTIONS -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchain-linux-libc++.cmake";
   fi
 - git checkout develop
 - git submodule update --init --recursive
 - mount

#     mkdir build;
#     cd build;
#     cmake ..  $CMAKE_CONFIGURE_OPTIONS -DCMAKE_BUILD_TYPE=Release;
#     cmake --build . -- _sl;
#     cmake --build . -- _dl;
#     ctest -C Release -E llfio_hl|shared_fs_mutex;
#     cd ..;

script:
 -
   if [ "$__" = "cmake tests" ] || [ "$__" = "x64 cmake tests (error_code)" ] || [ "$__" = "x64 cmake tests (status_code)" ]; then
     export ASAN_OPTIONS=detect_leaks=0;
     ctest -S .ci.cmake -VV --timeout 300 -DCTEST_CONFIGURE_OPTIONS=$CMAKE_CONFIGURE_OPTIONS ;
   fi
 -
   if [ "$__" = "ARM32 cmake tests (error_code)" ] || [ "$__" = "ARM32 cmake tests (status_code)" ]; then
     export CXX=arm-linux-gnueabihf-g++;
     export CMAKE_CONFIGURE_OPTIONS=$CMAKE_CONFIGURE_OPTIONS -DCMAKE_SYSTEM_PROCESSOR=armhf -DCMAKE_CXX_FLAGS="-Wno-attributes -Wno-psabi";
     ctest -S .ci.cmake -V --timeout 300 -DCTEST_DISABLE_TESTING=1 -DCTEST_CONFIGURE_OPTIONS=$CMAKE_CONFIGURE_OPTIONS ;
   fi
 -
   if [ "$__" = "Documentation" ]; then
     git config --global push.default simple;
     git config --global user.name "Jenkins nedprod CI";
     git config --global user.email "foo@nowhere";
     cd doc/html;
     git checkout gh-pages;
     cd ../..;
     ctest -S .docs.cmake -V;
     cd doc/html;
     git add . || true;
     git commit -a -m "Travis CI updates documentation" || true;
     git push -f https://jenkins-nedprod:$JENKINS_NEDPROD_PASSWORD@github.com/ned14/llfio gh-pages;
     cd ../..;
   fi
 -
   if [ "$__" = "Programs" ]; then
     cd programs;
     mkdir build;
     cd build;
     cmake ..  $CMAKE_CONFIGURE_OPTIONS -DCMAKE_BUILD_TYPE=Release;
     cmake --build .;
   fi
 -
   if [ "$__" = "Installability" ]; then
     git clone --depth 1 https://github.com/ned14/quickcpplib.git;
     pip3 install --user gitpython;
     python3 quickcpplib/scripts/test_cpp-pm_install.py test-packaging/example.cpp quickcpplib quickcpplib::hl https://github.com/ned14/quickcpplib outcome outcome::hl https://github.com/ned14/outcome llfio llfio::sl https://github.com/ned14/llfio;
     cd test_cpp-pm_install;
     mkdir build;
     cd build;
     cmake .. -DCMAKE_BUILD_TYPE=Release;
     cmake --build .;
   fi
 
after_success:
# - bash -x ./update_coveralls.sh `pwd`
#  - NEWNAME=llfio-v2.0-binaries-linux64-$(date +%Y%m%d%H%M%S).tgz
  - if [ "${TRAVIS_OS_NAME}" = "linux" ] && [ "$CXX" = "g++" ] && [ "$__" = "x64 cmake tests (error_code)" ]; then   
      NEWNAME=llfio-v2.0-binaries-linux64-$TRAVIS_COMMIT.tgz;
      mv llfio-v2.0-binaries-linux-x64.tgz $NEWNAME;
      curl -T $NEWNAME -u jenkins-nedprod:$JENKINS_NEDPROD_PASSWORD https://dedi5.nedprod.com/static/files/upload/;
    fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then   
      NEWNAME=llfio-v2.0-binaries-darwin64-$TRAVIS_COMMIT.tgz;
      mv llfio-v2.0-binaries-darwin-x64.tgz $NEWNAME;
      curl -T $NEWNAME -u jenkins-nedprod:$JENKINS_NEDPROD_PASSWORD https://dedi5.nedprod.com/static/files/upload/;
    fi

after_failure:
